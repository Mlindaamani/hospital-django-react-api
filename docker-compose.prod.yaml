version: '3.8'

services:
  postgres_database:
    image: postgres:14-alpine
    expose:
      - "5432"
    container_name: postgres
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - hms-app

  react_client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: client
    command: npm run build # Build for production
    env_file:
      - ./frontend/.env
    expose:
      - "5173"
    networks:
      - hms-app
    depends_on:
      - django_backend

  django_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    command: >
      bash -c "python manage.py collectstatic --noinput &&
               gunicorn --bind 0.0.0.0:8000 hms.wsgi:application"
    env_file:
      - ./backend/.env
    volumes:
      - static_data:/app/static
    networks:
      - hms-app
    depends_on:
      - postgres_database
    expose:
      - "8000"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443" # Add HTTPS for production
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
      - static_data:/app/static
    networks:
      - hms-app
    depends_on:
      - django_backend
      - react_client

volumes:
  postgres_data:
  static_data:

networks:
  hms-app:
    driver: bridge